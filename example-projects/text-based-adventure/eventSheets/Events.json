{
	"name": "Events",
	"events": [
		{
			"eventType": "comment",
			"text": "Made by Viridino Studios (@ViridinoStudios)\n\nMateus Ferreira Moreira - Programmer\nX: @BonzerKitten\nE-mail: ferreiramoreiramateus@gmail.com\n\nFelipe Vaiano Calderan - Programmer\nX: @fvcalderan\nE-mail: fvcalderan@gmail.com\n\nWesley Andrade - Artist\nX: @andrart7\nE-mail: wesleymatos1989@gmail.com\n\nHelp us make new examples by supporting our work on https://www.patreon.com/viridinostudios"
		},
		{
			"eventType": "comment",
			"text": "Color constants"
		},
		{
			"eventType": "variable",
			"name": "COLOR_YELLOW",
			"type": "string",
			"initialValue": "[/color][color=#D5DF7C]",
			"comment": "Code for the color yellow",
			"isStatic": false,
			"isConstant": true,
			"sid": 532251547177420
		},
		{
			"eventType": "variable",
			"name": "COLOR_PURPLE",
			"type": "string",
			"initialValue": "[/color][color=#867ADE]",
			"comment": "Code for the color purple",
			"isStatic": false,
			"isConstant": true,
			"sid": 232674191432296
		},
		{
			"eventType": "variable",
			"name": "COLOR_GREEN",
			"type": "string",
			"initialValue": "[/color][color=#B3EC91]",
			"comment": "Code for the color green",
			"isStatic": false,
			"isConstant": true,
			"sid": 489221962125911
		},
		{
			"eventType": "variable",
			"name": "COLOR_BLUE",
			"type": "string",
			"initialValue": "[/color][color=#84C5CC]",
			"comment": "Code for the color blue",
			"isStatic": false,
			"isConstant": true,
			"sid": 100581073661287
		},
		{
			"eventType": "variable",
			"name": "COLOR_WHITE",
			"type": "string",
			"initialValue": "[/color][color=#FFFFFF]",
			"comment": "Code for the color white",
			"isStatic": false,
			"isConstant": true,
			"sid": 389384174558706
		},
		{
			"eventType": "variable",
			"name": "COLOR_RED",
			"type": "string",
			"initialValue": "[/color][color=#924A40]",
			"comment": "Code for the color red",
			"isStatic": false,
			"isConstant": true,
			"sid": 147317397944675
		},
		{
			"eventType": "comment",
			"text": "Other constants."
		},
		{
			"eventType": "variable",
			"name": "IMG_SIZE",
			"type": "number",
			"initialValue": "35",
			"comment": "Number of lines to form an image",
			"isStatic": false,
			"isConstant": true,
			"sid": 735867308766068
		},
		{
			"eventType": "variable",
			"name": "MAX_HISTORY",
			"type": "number",
			"initialValue": "8800",
			"comment": "Maximum history length",
			"isStatic": false,
			"isConstant": true,
			"sid": 332724165146936
		},
		{
			"eventType": "variable",
			"name": "ERROR_MSG",
			"type": "string",
			"initialValue": "[colRed]Invalid. Enter a period to check available actions.",
			"comment": "Error message",
			"isStatic": false,
			"isConstant": true,
			"sid": 315619772281636
		},
		{
			"eventType": "comment",
			"text": "Gameplay variables."
		},
		{
			"eventType": "variable",
			"name": "history",
			"type": "string",
			"initialValue": "",
			"comment": "Text history",
			"isStatic": false,
			"isConstant": false,
			"sid": 552540175580768
		},
		{
			"eventType": "variable",
			"name": "currentInput",
			"type": "string",
			"initialValue": "",
			"comment": "Current player input",
			"isStatic": false,
			"isConstant": false,
			"sid": 458224746980554
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Tools",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "comment",
					"text": "Set history text, limiting max number of characters."
				},
				{
					"functionName": "setHistoryText",
					"functionDescription": "Set history text, limiting max number of characters",
					"functionCategory": "",
					"functionReturnType": "none",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [
						{
							"name": "text",
							"type": "string",
							"initialValue": "",
							"comment": "Text to be set",
							"sid": 627471670314813
						}
					],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"id": "set-eventvar-value",
							"objectClass": "System",
							"sid": 204852339329819,
							"parameters": {
								"variable": "history",
								"value": "right(text, MAX_HISTORY)"
							}
						}
					],
					"sid": 418525407691582
				},
				{
					"eventType": "comment",
					"text": "Paint text according to color tags."
				},
				{
					"functionName": "paintText",
					"functionDescription": "Paint text according to color tags",
					"functionCategory": "",
					"functionReturnType": "string",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [
						{
							"name": "text",
							"type": "string",
							"initialValue": "",
							"comment": "Text to be painted",
							"sid": 808988437234676
						}
					],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"id": "set-function-return-value",
							"objectClass": "Functions",
							"sid": 135269296403609,
							"parameters": {
								"value": "replace(\n    replace(\n        replace(\n            replace(\n                replace(\r\n                    replace(\r\n                        text,\r\n                        \"[colRed]\", COLOR_RED\r\n                    ),\r\n                    \"[colWhite]\", COLOR_WHITE\r\n                ),\n                \"[colBlue]\", COLOR_BLUE\n            ),\n            \"[colGreen]\", COLOR_GREEN\n        ),\n        \"[colYellow]\", COLOR_YELLOW\n    ),\n    \"[colPurple]\", COLOR_PURPLE\n)"
							}
						}
					],
					"sid": 666350810478124
				},
				{
					"eventType": "comment",
					"text": "Write text to console and scroll up when necessary."
				},
				{
					"functionName": "writeToConsole",
					"functionDescription": "Write text to console and scroll up when necessary",
					"functionCategory": "",
					"functionReturnType": "none",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [
						{
							"name": "text",
							"type": "string",
							"initialValue": "",
							"comment": "Text to be written",
							"sid": 141309826912343
						}
					],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"type": "comment",
							"text": "Set text."
						},
						{
							"id": "set-text",
							"objectClass": "ConsoleText",
							"sid": 419182670943717,
							"parameters": {
								"text": "text"
							}
						},
						{
							"type": "comment",
							"text": "Scroll up, if necessary."
						},
						{
							"id": "set-height",
							"objectClass": "ConsoleText",
							"sid": 893069721973928,
							"parameters": {
								"height": "min(Self.TextHeight + 4, 644)"
							}
						}
					],
					"sid": 479110430092412
				},
				{
					"eventType": "comment",
					"text": "Write image, line by line, to console."
				},
				{
					"functionName": "imgToConsole",
					"functionDescription": "Write image, line by line, to console",
					"functionCategory": "",
					"functionReturnType": "none",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"type": "comment",
							"text": "Temporarily disable player input."
						},
						{
							"id": "set-group-active",
							"objectClass": "System",
							"sid": 781934060702432,
							"parameters": {
								"group-name": "\"Player Input\"",
								"state": "deactivated"
							}
						},
						{
							"id": "set-instvar-value",
							"objectClass": "Timer",
							"sid": 987942869612999,
							"parameters": {
								"instance-variable": "printLineNo",
								"value": "0"
							}
						},
						{
							"id": "start-timer",
							"objectClass": "Timer",
							"sid": 973838643999528,
							"behaviorType": "Timer",
							"parameters": {
								"duration": "0.025",
								"type": "regular",
								"tag": "\"printLineNo\""
							}
						}
					],
					"sid": 696371966130732
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-timer",
							"objectClass": "Timer",
							"sid": 642555873601199,
							"behaviorType": "Timer",
							"parameters": {
								"tag": "\"printLineNo\""
							}
						}
					],
					"actions": [],
					"sid": 156557290858845,
					"children": [
						{
							"eventType": "comment",
							"text": "If there is at least one line left to be printed, print it."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "compare-instance-variable",
									"objectClass": "Timer",
									"sid": 549614360776662,
									"parameters": {
										"instance-variable": "printLineNo",
										"comparison": 2,
										"value": "35"
									}
								}
							],
							"actions": [],
							"sid": 260835704278343,
							"children": [
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 846991760088528,
											"parameters": {
												"output-index-or-name": "\"ImageSpecial\""
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 173977870828577,
											"parameters": {
												"value": "int(DictSpecTexts.Get(Flow.NodeTag)) = 1"
											}
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 284828158058796,
											"parameters": [
												"Functions.paintText(history & newline & tokenat(Flow.OutputValue(\"ImageSpecial\"), Timer.printLineNo, newline))"
											]
										}
									],
									"sid": 736265127849803
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 764785565934479
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 876784931654984,
											"parameters": [
												"Functions.paintText(history & newline & tokenat(Flow.OutputValue(\"Image\"), Timer.printLineNo, newline))"
											]
										}
									],
									"sid": 230851111478307
								},
								{
									"eventType": "block",
									"conditions": [],
									"actions": [
										{
											"callFunction": "writeToConsole",
											"sid": 185374844869390,
											"parameters": [
												"history"
											]
										},
										{
											"id": "add-to-instvar",
											"objectClass": "Timer",
											"sid": 257173289141643,
											"parameters": {
												"instance-variable": "printLineNo",
												"value": "1"
											}
										}
									],
									"sid": 127820943474901
								}
							]
						},
						{
							"eventType": "comment",
							"text": "Otherwise, stop timer and print remaining text."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "else",
									"objectClass": "System",
									"sid": 532653897042033
								}
							],
							"actions": [
								{
									"id": "stop-timer",
									"objectClass": "Timer",
									"sid": 690031006233301,
									"behaviorType": "Timer",
									"parameters": {
										"tag": "\"printLineNo\""
									}
								},
								{
									"type": "comment",
									"text": "Enable player input."
								},
								{
									"id": "set-group-active",
									"objectClass": "System",
									"sid": 891503209421073,
									"parameters": {
										"group-name": "\"Player Input\"",
										"state": "activated"
									}
								}
							],
							"sid": 401088382603747,
							"children": [
								{
									"eventType": "comment",
									"text": "Print special text."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 499493249215229,
											"parameters": {
												"output-index-or-name": "\"TextSpecial\""
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 869075676363238,
											"parameters": {
												"value": "int(DictSpecTexts.Get(Flow.NodeTag)) = 1"
											}
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 116121245133606,
											"parameters": [
												"history & newline & Functions.paintText(Flow.OutputValue(\"TextSpecial\"))"
											]
										},
										{
											"callFunction": "writeToConsole",
											"sid": 736611454357177,
											"parameters": [
												"history"
											]
										}
									],
									"sid": 935965464063732
								},
								{
									"eventType": "comment",
									"text": "Print default text."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 348633757369023
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 956017271983145,
											"parameters": [
												"history & newline & Functions.paintText(Flow.OutputValue(\"Text\"))"
											]
										},
										{
											"callFunction": "writeToConsole",
											"sid": 708207882994623,
											"parameters": [
												"history"
											]
										}
									],
									"sid": 463671132569274
								}
							]
						}
					]
				},
				{
					"eventType": "comment",
					"text": "Write node contents to the console."
				},
				{
					"functionName": "writeNode",
					"functionDescription": "Write node contents to the console",
					"functionCategory": "",
					"functionReturnType": "none",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [],
					"eventType": "function-block",
					"conditions": [],
					"actions": [],
					"sid": 985357247347543,
					"children": [
						{
							"eventType": "comment",
							"text": "There is an image to be displayed."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "has-output",
									"objectClass": "Flow",
									"sid": 874717745889944,
									"parameters": {
										"output-index-or-name": "\"ImageSpecial\""
									}
								},
								{
									"id": "has-output",
									"objectClass": "Flow",
									"sid": 171254206408315,
									"parameters": {
										"output-index-or-name": "\"Image\""
									}
								}
							],
							"actions": [
								{
									"callFunction": "imgToConsole",
									"sid": 116917145458984
								}
							],
							"sid": 141241613790968,
							"isOrBlock": true
						},
						{
							"eventType": "comment",
							"text": "There is no image to be displayed."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "else",
									"objectClass": "System",
									"sid": 150371982929595
								}
							],
							"actions": [],
							"sid": 559490065137722,
							"children": [
								{
									"eventType": "comment",
									"text": "Print special text."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 517509686704294,
											"parameters": {
												"output-index-or-name": "\"TextSpecial\""
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 140970449766880,
											"parameters": {
												"value": "int(DictSpecTexts.Get(Flow.NodeTag)) = 1"
											}
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 738863881335728,
											"parameters": [
												"history & newline & Functions.paintText(Flow.OutputValue(\"TextSpecial\"))"
											]
										},
										{
											"callFunction": "writeToConsole",
											"sid": 380164424547174,
											"parameters": [
												"history"
											]
										}
									],
									"sid": 559677859147877
								},
								{
									"eventType": "comment",
									"text": "Print default text."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 201724306533326
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 208599665050466,
											"parameters": [
												"history & newline & Functions.paintText(Flow.OutputValue(\"Text\"))"
											]
										},
										{
											"callFunction": "writeToConsole",
											"sid": 537121132925172,
											"parameters": [
												"history"
											]
										}
									],
									"sid": 676697463243457
								}
							]
						}
					]
				}
			],
			"sid": 584167046731892
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Setup",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "comment",
					"text": "Setup initial state of the game."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-start-of-layout",
							"objectClass": "System",
							"sid": 707253100436106
						}
					],
					"actions": [
						{
							"type": "comment",
							"text": "Start flowchart."
						},
						{
							"id": "start-flowchart",
							"objectClass": "Flow",
							"sid": 986259524863346,
							"parameters": {
								"flowchart-name": "StartAndKeyroom",
								"start-node-tag": "\"\"",
								"flowchart-tag": "\"StartAndKeyroom\"",
								"set-as-current": true
							}
						},
						{
							"type": "comment",
							"text": "Write initial message to the console."
						},
						{
							"callFunction": "writeNode",
							"sid": 572083183851567
						},
						{
							"type": "comment",
							"text": "Load special items dictionary."
						},
						{
							"id": "request-project-file",
							"objectClass": "AJAX",
							"sid": 126940069353713,
							"parameters": {
								"tag": "\"\"",
								"file": "SpecialItems.json"
							}
						},
						{
							"id": "wait-for-previous-actions",
							"objectClass": "System",
							"sid": 707789770797065
						},
						{
							"id": "load",
							"objectClass": "DictSpecInputs",
							"sid": 873372704786252,
							"parameters": {
								"json": "AJAX.LastData"
							}
						},
						{
							"type": "comment",
							"text": "Load special texts dictionary."
						},
						{
							"id": "request-project-file",
							"objectClass": "AJAX",
							"sid": 621922684464249,
							"parameters": {
								"tag": "\"\"",
								"file": "SpecialTexts.json"
							}
						},
						{
							"id": "wait-for-previous-actions",
							"objectClass": "System",
							"sid": 183890786388387
						},
						{
							"id": "load",
							"objectClass": "DictSpecTexts",
							"sid": 913053573887908,
							"parameters": {
								"json": "AJAX.LastData"
							}
						}
					],
					"sid": 586587298333973
				}
			],
			"sid": 411248146496547
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Player Input",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "variable",
					"name": "validCommand",
					"type": "boolean",
					"initialValue": "false",
					"comment": "Did the player type a valid command?",
					"isStatic": true,
					"isConstant": false,
					"sid": 967132795942859
				},
				{
					"eventType": "comment",
					"text": "Update history, clear input and write new node."
				},
				{
					"functionName": "updateHistoryThenWrite",
					"functionDescription": "Update history, clear input and write new node",
					"functionCategory": "",
					"functionReturnType": "none",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"callFunction": "setHistoryText",
							"sid": 787574034612940,
							"parameters": [
								"history & currentInput & newline"
							]
						},
						{
							"id": "set-eventvar-value",
							"objectClass": "System",
							"sid": 484234372993582,
							"parameters": {
								"variable": "currentInput",
								"value": "\"\""
							}
						},
						{
							"callFunction": "writeNode",
							"sid": 637361575174668
						},
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 288822907915987,
							"parameters": {
								"variable": "validCommand",
								"value": "true"
							}
						}
					],
					"sid": 644588079925800
				},
				{
					"eventType": "comment",
					"text": "Check for keypress."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-any-key-pressed",
							"objectClass": "Keyboard",
							"sid": 546192205901290
						}
					],
					"actions": [],
					"sid": 305839110488577,
					"children": [
						{
							"eventType": "comment",
							"text": "Confirm input."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "key-is-down",
									"objectClass": "Keyboard",
									"sid": 184757722207100,
									"parameters": {
										"key": 13
									}
								}
							],
							"actions": [
								{
									"id": "set-boolean-eventvar",
									"objectClass": "System",
									"sid": 270649436139170,
									"parameters": {
										"variable": "validCommand",
										"value": "false"
									}
								}
							],
							"sid": 916003935818257,
							"children": [
								{
									"eventType": "comment",
									"text": "Player wants to view available actions."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 955061538490188,
											"parameters": {
												"value": "trim(currentInput) = \".\""
											}
										}
									],
									"actions": [
										{
											"callFunction": "showCommands",
											"sid": 157524178456763
										},
										{
											"id": "set-boolean-eventvar",
											"objectClass": "System",
											"sid": 475142515546365,
											"parameters": {
												"variable": "validCommand",
												"value": "true"
											}
										}
									],
									"sid": 201557116956238
								},
								{
									"eventType": "comment",
									"text": "Player restarted the game."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 844385649411909
										},
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 326427395189282,
											"parameters": {
												"output-index-or-name": "\"Restart\""
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 582039500349772,
											"parameters": {
												"value": "lowercase(trim(currentInput)) = \"restart\""
											}
										}
									],
									"actions": [
										{
											"type": "comment",
											"text": "Restart the game."
										},
										{
											"id": "reset-flowchart",
											"objectClass": "Flow",
											"sid": 484042683895119
										},
										{
											"id": "reset-global-variables",
											"objectClass": "System",
											"sid": 456008543102060
										},
										{
											"type": "comment",
											"text": "Update history, clear input and write new node."
										},
										{
											"callFunction": "updateHistoryThenWrite",
											"sid": 768437511720434
										},
										{
											"type": "comment",
											"text": "Reset special items dictionary."
										},
										{
											"id": "request-project-file",
											"objectClass": "AJAX",
											"sid": 647012925709386,
											"parameters": {
												"tag": "\"\"",
												"file": "SpecialItems.json"
											}
										},
										{
											"id": "wait-for-previous-actions",
											"objectClass": "System",
											"sid": 440200736651508
										},
										{
											"id": "load",
											"objectClass": "DictSpecInputs",
											"sid": 641552210792268,
											"parameters": {
												"json": "AJAX.LastData"
											}
										},
										{
											"type": "comment",
											"text": "Reset special texts dictionary."
										},
										{
											"id": "request-project-file",
											"objectClass": "AJAX",
											"sid": 447777699037074,
											"parameters": {
												"tag": "\"\"",
												"file": "SpecialTexts.json"
											}
										},
										{
											"id": "wait-for-previous-actions",
											"objectClass": "System",
											"sid": 197217032612770
										},
										{
											"id": "load",
											"objectClass": "DictSpecTexts",
											"sid": 419964373908755,
											"parameters": {
												"json": "AJAX.LastData"
											}
										}
									],
									"sid": 207652210443231
								},
								{
									"eventType": "comment",
									"text": "Player goes back to parent node."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 146459242840971
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 714545651521246,
											"parameters": {
												"value": "lowercase(trim(currentInput)) = \"back\""
											}
										},
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 447075284558723,
											"parameters": {
												"output-index-or-name": "\"Back\""
											}
										}
									],
									"actions": [
										{
											"type": "comment",
											"text": "Go to parent node."
										},
										{
											"id": "goto-parent-flowchart-node",
											"objectClass": "Flow",
											"sid": 476139012919695,
											"parameters": {
												"index-or-tag": "0"
											}
										},
										{
											"type": "comment",
											"text": "Update history, clear input and write new node."
										},
										{
											"callFunction": "updateHistoryThenWrite",
											"sid": 678975260370912
										}
									],
									"sid": 883566807789150
								},
								{
									"eventType": "comment",
									"text": "Player performed a valid special action."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 592587060437392
										},
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 114355836337351,
											"parameters": {
												"output-index-or-name": "\"Special\""
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 467147193637163,
											"parameters": {
												"value": "(lowercase(trim(currentInput)) = Flow.OutputValue(\"Special\")) & (int(DictSpecInputs.Get(Flow.NodeTag))= 1)"
											}
										}
									],
									"actions": [
										{
											"type": "comment",
											"text": "Go to special node."
										},
										{
											"id": "goto-next-flowchart-node",
											"objectClass": "Flow",
											"sid": 244503753393682,
											"parameters": {
												"index-or-name": "\"Special\""
											}
										},
										{
											"type": "comment",
											"text": "Update history, clear input and write new node."
										},
										{
											"callFunction": "updateHistoryThenWrite",
											"sid": 905476319726630
										}
									],
									"sid": 541922009348151
								},
								{
									"eventType": "comment",
									"text": "Show performed a valid success action."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 901489502901205
										},
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 774739378861754,
											"parameters": {
												"output-index-or-name": "\"Condition\""
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 641085407691528,
											"parameters": {
												"value": "int(DictSpecInputs.Get(tokenat(Flow.OutputValue(\"Condition\"), 0, \"|\"))) = int(tokenat(Flow.OutputValue(\"Condition\"), 1, \"|\"))"
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 177670426040206,
											"parameters": {
												"value": "(lowercase(trim(currentInput)) = Flow.OutputValue(\"Success\"))"
											}
										}
									],
									"actions": [
										{
											"type": "comment",
											"text": "Go to next node, based on player action choice."
										},
										{
											"id": "goto-next-flowchart-node",
											"objectClass": "Flow",
											"sid": 516120405777114,
											"parameters": {
												"index-or-name": "\"Success\""
											}
										},
										{
											"type": "comment",
											"text": "Update history, clear input and write new node."
										},
										{
											"callFunction": "updateHistoryThenWrite",
											"sid": 446961760042597
										}
									],
									"sid": 607671704363588
								},
								{
									"eventType": "comment",
									"text": "Fail action."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 633162976390235
										},
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 520464417366875,
											"parameters": {
												"output-index-or-name": "\"Condition\""
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 830983400517105,
											"parameters": {
												"value": "(lowercase(trim(currentInput)) = Flow.OutputValue(\"Fail\"))"
											}
										}
									],
									"actions": [
										{
											"type": "comment",
											"text": "Go to next node, based on player action choice."
										},
										{
											"id": "goto-next-flowchart-node",
											"objectClass": "Flow",
											"sid": 769322299824149,
											"parameters": {
												"index-or-name": "\"Fail\""
											}
										},
										{
											"type": "comment",
											"text": "Update history, clear input and write new node."
										},
										{
											"callFunction": "updateHistoryThenWrite",
											"sid": 559248516792432
										}
									],
									"sid": 572974162921353
								},
								{
									"eventType": "comment",
									"text": "Player performed a valid action."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 120513319268403
										},
										{
											"id": "for",
											"objectClass": "System",
											"sid": 604239719430577,
											"parameters": {
												"name": "\"i\"",
												"start-index": "0",
												"end-index": "Flow.OutputCount - 1"
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 227729322118955,
											"parameters": {
												"value": "left(Flow.OutputNameAt(loopindex(\"i\")), 6) = \"Option\""
											}
										},
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 807176137361289,
											"parameters": {
												"value": "lowercase(trim(currentInput)) = Flow.OutputValue(loopindex(\"i\"))"
											}
										}
									],
									"actions": [
										{
											"type": "comment",
											"text": "Go to next node, based on player action choice."
										},
										{
											"id": "goto-next-flowchart-node",
											"objectClass": "Flow",
											"sid": 729502601675725,
											"parameters": {
												"index-or-name": "loopindex(\"i\")"
											}
										},
										{
											"type": "comment",
											"text": "Update history, clear input and write new node."
										},
										{
											"callFunction": "updateHistoryThenWrite",
											"sid": 633330999025207
										},
										{
											"id": "stop-loop",
											"objectClass": "System",
											"sid": 814359097041231
										}
									],
									"sid": 210906193695907
								},
								{
									"eventType": "comment",
									"text": "Player performed an invalid action."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "compare-boolean-eventvar",
											"objectClass": "System",
											"sid": 746499790892955,
											"parameters": {
												"variable": "validCommand"
											},
											"isInverted": true
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 706873051427566,
											"parameters": [
												"Functions.paintText(history & currentInput & newline & newline & ERROR_MSG & newline & newline & \"[colYellow]> \")"
											]
										},
										{
											"id": "set-eventvar-value",
											"objectClass": "System",
											"sid": 896523231103844,
											"parameters": {
												"variable": "currentInput",
												"value": "\"\""
											}
										},
										{
											"callFunction": "writeToConsole",
											"sid": 542311858981750,
											"parameters": [
												"history"
											]
										}
									],
									"sid": 224207085341871
								},
								{
									"eventType": "comment",
									"text": "Check if node has Switch field. If so, switch this dictionary variable."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 662874638224525,
											"parameters": {
												"output-index-or-name": "\"Switch\""
											}
										}
									],
									"actions": [
										{
											"id": "set-key",
											"objectClass": "DictSpecInputs",
											"sid": 709231117467098,
											"parameters": {
												"key": "tokenat(Flow.OutputValue(\"Switch\"), 0, \"|\")",
												"value": "tokenat(Flow.OutputValue(\"Switch\"), 1, \"|\")"
											}
										},
										{
											"id": "set-key",
											"objectClass": "DictSpecTexts",
											"sid": 136148990651669,
											"parameters": {
												"key": "tokenat(Flow.OutputValue(\"Switch\"), 0, \"|\")",
												"value": "tokenat(Flow.OutputValue(\"Switch\"), 1, \"|\")"
											}
										}
									],
									"sid": 614468721846334
								},
								{
									"eventType": "comment",
									"text": "Check if node has Autoback field. If so, go back to specified node."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "has-output",
											"objectClass": "Flow",
											"sid": 696279358691372,
											"parameters": {
												"output-index-or-name": "\"Autoback\""
											}
										}
									],
									"actions": [
										{
											"id": "goto-any-flowchart-node",
											"objectClass": "Flow",
											"sid": 693281834855645,
											"parameters": {
												"node-tag": "Flow.OutputValue(\"Autoback\")"
											}
										}
									],
									"sid": 615209026247162
								}
							]
						},
						{
							"eventType": "comment",
							"text": "Allow uppercase and lowercase english letters, as well as numbers, space and period."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "else",
									"objectClass": "System",
									"sid": 706665331065701
								},
								{
									"id": "evaluate-expression",
									"objectClass": "System",
									"sid": 277486894101593,
									"parameters": {
										"value": "((Keyboard.LastKeyCode >= 48) & (Keyboard.LastKeyCode <= 57)) | ((Keyboard.LastKeyCode >= 65) & (Keyboard.LastKeyCode <= 90)) | Keyboard.LastKeyCode = 32 | Keyboard.LastKeyCode = 190"
									}
								}
							],
							"actions": [
								{
									"id": "set-eventvar-value",
									"objectClass": "System",
									"sid": 469281485619870,
									"parameters": {
										"variable": "currentInput",
										"value": "left(currentInput & Keyboard.TypedKey, 32)"
									}
								},
								{
									"callFunction": "writeToConsole",
									"sid": 179301652207120,
									"parameters": [
										"history & currentInput"
									]
								}
							],
							"sid": 423834734340295
						}
					]
				},
				{
					"eventType": "comment",
					"text": "Make backspace work similar to how it does in typical operating systems."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 130993787141962,
							"parameters": {
								"key": 8
							}
						},
						{
							"id": "is-timer-running",
							"objectClass": "Timer",
							"sid": 155159238857647,
							"behaviorType": "Timer",
							"parameters": {
								"tag": "\"bkspWait\""
							},
							"isInverted": true
						}
					],
					"actions": [
						{
							"id": "set-eventvar-value",
							"objectClass": "System",
							"sid": 342185077892809,
							"parameters": {
								"variable": "currentInput",
								"value": "left(currentInput, len(currentInput) - 1)"
							}
						},
						{
							"callFunction": "writeToConsole",
							"sid": 990496869984202,
							"parameters": [
								"history & currentInput"
							]
						},
						{
							"id": "add-to-instvar",
							"objectClass": "Timer",
							"sid": 160517117057612,
							"parameters": {
								"instance-variable": "charactersErased",
								"value": "1"
							}
						}
					],
					"sid": 996258721047694,
					"children": [
						{
							"eventType": "comment",
							"text": "If only one character has been erased during a single press, wait longer before another one can be deleted."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "compare-instance-variable",
									"objectClass": "Timer",
									"sid": 173319118819433,
									"parameters": {
										"instance-variable": "charactersErased",
										"comparison": 0,
										"value": "1"
									}
								}
							],
							"actions": [
								{
									"id": "start-timer",
									"objectClass": "Timer",
									"sid": 540757510190993,
									"behaviorType": "Timer",
									"parameters": {
										"duration": "0.33",
										"type": "once",
										"tag": "\"bkspWait\""
									}
								}
							],
							"sid": 188580289197684
						},
						{
							"eventType": "comment",
							"text": "Otherwise, delete characters faster."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "else",
									"objectClass": "System",
									"sid": 306622209413174
								}
							],
							"actions": [
								{
									"id": "start-timer",
									"objectClass": "Timer",
									"sid": 101926138926429,
									"behaviorType": "Timer",
									"parameters": {
										"duration": "0.033",
										"type": "once",
										"tag": "\"bkspWait\""
									}
								}
							],
							"sid": 603433839644562
						}
					]
				},
				{
					"eventType": "comment",
					"text": "Reset character deletion counter."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-key-released",
							"objectClass": "Keyboard",
							"sid": 208762576379590,
							"parameters": {
								"key": 8
							}
						}
					],
					"actions": [
						{
							"id": "set-instvar-value",
							"objectClass": "Timer",
							"sid": 648512274497009,
							"parameters": {
								"instance-variable": "charactersErased",
								"value": "0"
							}
						},
						{
							"id": "stop-timer",
							"objectClass": "Timer",
							"sid": 161534526006907,
							"behaviorType": "Timer",
							"parameters": {
								"tag": "\"bkspWait\""
							}
						}
					],
					"sid": 250938133552463
				}
			],
			"sid": 549504656476640
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Process Logic",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "comment",
					"text": "Show available commands."
				},
				{
					"functionName": "showCommands",
					"functionDescription": "Show available commands",
					"functionCategory": "",
					"functionReturnType": "none",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"callFunction": "setHistoryText",
							"sid": 697861986392047,
							"parameters": [
								"Functions.paintText(history & currentInput & newline & newline & \"[colGreen]\")"
							]
						},
						{
							"id": "set-eventvar-value",
							"objectClass": "System",
							"sid": 749719075656411,
							"parameters": {
								"variable": "currentInput",
								"value": "\"\""
							}
						}
					],
					"sid": 454845267722047,
					"children": [
						{
							"eventType": "comment",
							"text": "Show special action."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "has-output",
									"objectClass": "Flow",
									"sid": 695108323983680,
									"parameters": {
										"output-index-or-name": "\"Special\""
									}
								},
								{
									"id": "evaluate-expression",
									"objectClass": "System",
									"sid": 805862347625668,
									"parameters": {
										"value": "int(DictSpecInputs.Get(Flow.NodeTag)) = 1"
									}
								}
							],
							"actions": [
								{
									"callFunction": "setHistoryText",
									"sid": 793782009068831,
									"parameters": [
										"history & Flow.OutputValue(\"Special\") & \"    \""
									]
								}
							],
							"sid": 359473528565705
						},
						{
							"eventType": "comment",
							"text": "Show restart action."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "has-output",
									"objectClass": "Flow",
									"sid": 907307803112017,
									"parameters": {
										"output-index-or-name": "\"Restart\""
									}
								}
							],
							"actions": [
								{
									"callFunction": "setHistoryText",
									"sid": 289275885919222,
									"parameters": [
										"history & Flow.OutputValue(\"Restart\") & \"    \""
									]
								}
							],
							"sid": 603377748921631
						},
						{
							"eventType": "comment",
							"text": "Show conditional action"
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "has-output",
									"objectClass": "Flow",
									"sid": 859131089183793,
									"parameters": {
										"output-index-or-name": "\"Condition\""
									}
								}
							],
							"actions": [],
							"sid": 719050639106116,
							"children": [
								{
									"eventType": "comment",
									"text": "Success action."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "evaluate-expression",
											"objectClass": "System",
											"sid": 752571949964228,
											"parameters": {
												"value": "int(DictSpecInputs.Get(tokenat(Flow.OutputValue(\"Condition\"), 0, \"|\"))) = int(tokenat(Flow.OutputValue(\"Condition\"), 1, \"|\"))"
											}
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 776560018729525,
											"parameters": [
												"history & Flow.OutputValue(\"Success\") & \"    \""
											]
										}
									],
									"sid": 227629655691034
								},
								{
									"eventType": "comment",
									"text": "Fail action."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 998158644273217
										}
									],
									"actions": [
										{
											"callFunction": "setHistoryText",
											"sid": 836985322693254,
											"parameters": [
												"history & Flow.OutputValue(\"Fail\") & \"    \""
											]
										}
									],
									"sid": 446210024048632
								}
							]
						},
						{
							"eventType": "comment",
							"text": "Show available actions."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "for",
									"objectClass": "System",
									"sid": 667277307851386,
									"parameters": {
										"name": "\"i\"",
										"start-index": "0",
										"end-index": "Flow.OutputCount - 1"
									}
								},
								{
									"id": "evaluate-expression",
									"objectClass": "System",
									"sid": 356210326754818,
									"parameters": {
										"value": "left(Flow.OutputNameAt(loopindex(\"i\")), 6) = \"Option\" | Flow.OutputNameAt(loopindex(\"i\")) = \"Back\""
									}
								}
							],
							"actions": [
								{
									"callFunction": "setHistoryText",
									"sid": 463758481522798,
									"parameters": [
										"history & Flow.OutputValue(loopindex(\"i\")) & \"    \""
									]
								}
							],
							"sid": 897394905627382
						},
						{
							"eventType": "comment",
							"text": "Rewrite prompt and set ConsoleText text."
						},
						{
							"eventType": "block",
							"conditions": [],
							"actions": [
								{
									"callFunction": "setHistoryText",
									"sid": 829671506400733,
									"parameters": [
										"Functions.paintText(history & newline & newline & \"[colYellow]> \")"
									]
								},
								{
									"callFunction": "writeToConsole",
									"sid": 400102818108157,
									"parameters": [
										"history & currentInput"
									]
								}
							],
							"sid": 237547780354259
						}
					]
				}
			],
			"sid": 148327382230450
		}
	],
	"sid": 719665984063433
}