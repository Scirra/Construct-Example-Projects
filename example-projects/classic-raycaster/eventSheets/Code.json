{
	"name": "Code",
	"events": [
		{
			"eventType": "comment",
			"text": "Made by Viridino Studios (@ViridinoStudios)\n\nMateus Ferreira Moreira - Programmer\nX: @BonzerKitten\nE-mail: ferreiramoreiramateus@gmail.com\n\nFelipe Vaiano Calderan - Programmer\nX: @fvcalderan\nE-mail: fvcalderan@gmail.com\n\nWesley Andrade - Artist\nX: @andrart7\nE-mail: wesleymatos1989@gmail.com\n\nHelp us make new examples by supporting our work on https://www.patreon.com/viridinostudios"
		},
		{
			"eventType": "comment",
			"text": "How wide is the camera's field of view."
		},
		{
			"eventType": "variable",
			"name": "FOV",
			"type": "number",
			"initialValue": "60",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 530095815829083
		},
		{
			"eventType": "comment",
			"text": "How many columns will be drawn horizontally."
		},
		{
			"eventType": "variable",
			"name": "SCREENRESOLUTION",
			"type": "number",
			"initialValue": "320",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 768122829768336
		},
		{
			"eventType": "comment",
			"text": "How tall each wall is."
		},
		{
			"eventType": "variable",
			"name": "WALLHEIGHT",
			"type": "number",
			"initialValue": "3000",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 766559161526244
		},
		{
			"eventType": "comment",
			"text": "The angle at which the player is looking at."
		},
		{
			"eventType": "variable",
			"name": "PlayerLookingAngle",
			"type": "number",
			"initialValue": "0",
			"comment": "",
			"isStatic": false,
			"isConstant": false,
			"sid": 383916708779429
		},
		{
			"eventType": "comment",
			"text": "The RGB components of color one."
		},
		{
			"eventType": "variable",
			"name": "COLORONERED",
			"type": "number",
			"initialValue": "49",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 131296744571802
		},
		{
			"eventType": "variable",
			"name": "COLORONEGREEN",
			"type": "number",
			"initialValue": "56",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 988182757080531
		},
		{
			"eventType": "variable",
			"name": "COLORONEBLUE",
			"type": "number",
			"initialValue": "101",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 802804331917004
		},
		{
			"eventType": "comment",
			"text": "The RGB components of color two."
		},
		{
			"eventType": "variable",
			"name": "COLORTWORED",
			"type": "number",
			"initialValue": "151",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 513713543876857
		},
		{
			"eventType": "variable",
			"name": "COLORTWOGREEN",
			"type": "number",
			"initialValue": "78",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 414678574225416
		},
		{
			"eventType": "variable",
			"name": "COLORTWOBLUE",
			"type": "number",
			"initialValue": "194",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 249532904134147
		},
		{
			"eventType": "comment",
			"text": "The RGB components of color three."
		},
		{
			"eventType": "variable",
			"name": "COLORTHREERED",
			"type": "number",
			"initialValue": "254",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 992455463745693
		},
		{
			"eventType": "variable",
			"name": "COLORTHREEGREEN",
			"type": "number",
			"initialValue": "123",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 830618678907267
		},
		{
			"eventType": "variable",
			"name": "COLORTHREEBLUE",
			"type": "number",
			"initialValue": "191",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 572079654546119
		},
		{
			"eventType": "comment",
			"text": "The RGB components of color four."
		},
		{
			"eventType": "variable",
			"name": "COLORFOURRED",
			"type": "number",
			"initialValue": "80",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 368081335464692
		},
		{
			"eventType": "variable",
			"name": "COLORFOURGREEN",
			"type": "number",
			"initialValue": "64",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 417677625710978
		},
		{
			"eventType": "variable",
			"name": "COLORFOURBLUE",
			"type": "number",
			"initialValue": "153",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 380518828849322
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Instructions",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "comment",
					"text": "Setup the instructions by starting a seven seconds long timer."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-start-of-layout",
							"objectClass": "System",
							"sid": 815937351168911
						}
					],
					"actions": [
						{
							"id": "start-timer",
							"objectClass": "InstructionsText",
							"sid": 435050707993232,
							"behaviorType": "Timer",
							"parameters": {
								"duration": "7",
								"type": "once",
								"tag": "\"SelfDestroy\""
							}
						}
					],
					"sid": 522024431732292
				},
				{
					"eventType": "comment",
					"text": "Once the timer is over, remove the instructions from the player's screen."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-timer",
							"objectClass": "InstructionsText",
							"sid": 711322672574194,
							"behaviorType": "Timer",
							"parameters": {
								"tag": "\"SelfDestroy\""
							}
						}
					],
					"actions": [
						{
							"id": "tween-one-property",
							"objectClass": "InstructionsText",
							"sid": 875693570715872,
							"behaviorType": "Tween",
							"parameters": {
								"tags": "\"SelfDestroy\"",
								"property": "offsetY",
								"end-value": "180",
								"time": "1",
								"ease": "easeinsine",
								"destroy-on-complete": "yes",
								"loop": "no",
								"ping-pong": "no",
								"repeat-count": "1"
							}
						}
					],
					"sid": 562543834788565
				}
			],
			"sid": 526292138635180
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Player Movement",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "comment",
					"text": "Rotate the player (and the fake camera) horizontally."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-movement",
							"objectClass": "Mouse",
							"sid": 868344235670198
						}
					],
					"actions": [
						{
							"id": "set-eventvar-value",
							"objectClass": "System",
							"sid": 246244673226304,
							"parameters": {
								"variable": "PlayerLookingAngle",
								"value": "Functions.ConvertAngle(PlayerLookingAngle + Mouse.MovementX * 0.05)"
							}
						},
						{
							"id": "set-angle",
							"objectClass": "PlayerTexture",
							"sid": 983186959660027,
							"parameters": {
								"angle": "PlayerLookingAngle"
							}
						}
					],
					"sid": 922083441279867
				},
				{
					"eventType": "comment",
					"text": "Make angle between 0 and 359."
				},
				{
					"functionName": "ConvertAngle",
					"functionDescription": "",
					"functionCategory": "",
					"functionReturnType": "number",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [
						{
							"name": "BaseAngle",
							"type": "number",
							"initialValue": "0",
							"comment": "",
							"sid": 667644982378017
						}
					],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"id": "set-function-return-value",
							"objectClass": "Functions",
							"sid": 791648897402464,
							"parameters": {
								"value": "(BaseAngle + 360) % 360"
							}
						}
					],
					"sid": 953548782822686
				},
				{
					"eventType": "comment",
					"text": "Lock the pointer to the game"
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-click",
							"objectClass": "Mouse",
							"sid": 373064403438470,
							"parameters": {
								"mouse-button": "left",
								"click-type": "clicked"
							}
						},
						{
							"id": "has-pointer-lock",
							"objectClass": "Mouse",
							"sid": 359663518982012,
							"isInverted": true
						}
					],
					"actions": [
						{
							"id": "request-pointer-lock",
							"objectClass": "Mouse",
							"sid": 387803488138475
						}
					],
					"sid": 178565677971701
				},
				{
					"eventType": "comment",
					"text": "Whether or not the left key is being pressed."
				},
				{
					"eventType": "variable",
					"name": "LeftKey",
					"type": "boolean",
					"initialValue": "false",
					"comment": "",
					"isStatic": false,
					"isConstant": false,
					"sid": 279740683074122
				},
				{
					"eventType": "comment",
					"text": "Whether or not the right key is being pressed."
				},
				{
					"eventType": "variable",
					"name": "RightKey",
					"type": "boolean",
					"initialValue": "false",
					"comment": "",
					"isStatic": false,
					"isConstant": false,
					"sid": 637554000305627
				},
				{
					"eventType": "comment",
					"text": "Whether or not the up key is being pressed."
				},
				{
					"eventType": "variable",
					"name": "UpKey",
					"type": "boolean",
					"initialValue": "false",
					"comment": "",
					"isStatic": false,
					"isConstant": false,
					"sid": 122585697131735
				},
				{
					"eventType": "comment",
					"text": "Whether or not the down key is being pressed."
				},
				{
					"eventType": "variable",
					"name": "DownKey",
					"type": "boolean",
					"initialValue": "false",
					"comment": "",
					"isStatic": false,
					"isConstant": false,
					"sid": 151964992643382
				},
				{
					"eventType": "comment",
					"text": "Identify and store movement input."
				},
				{
					"eventType": "comment",
					"text": "Receive input from the A key (left)."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 124905727093764,
							"parameters": {
								"key": 65
							}
						}
					],
					"actions": [
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 453451018982161,
							"parameters": {
								"variable": "LeftKey",
								"value": "true"
							}
						}
					],
					"sid": 274552049059866
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "else",
							"objectClass": "System",
							"sid": 486096833572397
						},
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 635642153454570,
							"parameters": {
								"key": 65
							},
							"isInverted": true
						}
					],
					"actions": [
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 718342784163571,
							"parameters": {
								"variable": "LeftKey",
								"value": "false"
							}
						}
					],
					"sid": 168373381736650
				},
				{
					"eventType": "comment",
					"text": "Receive input from the D key (right)."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 404647050839892,
							"parameters": {
								"key": 68
							}
						}
					],
					"actions": [
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 983412937530909,
							"parameters": {
								"variable": "RightKey",
								"value": "true"
							}
						}
					],
					"sid": 953778719739016
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "else",
							"objectClass": "System",
							"sid": 782296950671689
						},
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 469618665216169,
							"parameters": {
								"key": 68
							},
							"isInverted": true
						}
					],
					"actions": [
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 570806178820128,
							"parameters": {
								"variable": "RightKey",
								"value": "false"
							}
						}
					],
					"sid": 730184573329017
				},
				{
					"eventType": "comment",
					"text": "Receive input from the W key (up)."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 971028057770178,
							"parameters": {
								"key": 87
							}
						}
					],
					"actions": [
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 179782086802876,
							"parameters": {
								"variable": "UpKey",
								"value": "true"
							}
						}
					],
					"sid": 642983154373852
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "else",
							"objectClass": "System",
							"sid": 328790020587268
						},
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 465813766666992,
							"parameters": {
								"key": 87
							},
							"isInverted": true
						}
					],
					"actions": [
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 123952312721097,
							"parameters": {
								"variable": "UpKey",
								"value": "false"
							}
						}
					],
					"sid": 384182182837379
				},
				{
					"eventType": "comment",
					"text": "Receive input from the S key (down)."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 240743631306544,
							"parameters": {
								"key": 83
							}
						}
					],
					"actions": [
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 289317403441317,
							"parameters": {
								"variable": "DownKey",
								"value": "true"
							}
						}
					],
					"sid": 995532966718249
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "else",
							"objectClass": "System",
							"sid": 729710107551347
						},
						{
							"id": "key-is-down",
							"objectClass": "Keyboard",
							"sid": 802543137336296,
							"parameters": {
								"key": 83
							},
							"isInverted": true
						}
					],
					"actions": [
						{
							"id": "set-boolean-eventvar",
							"objectClass": "System",
							"sid": 576918428583387,
							"parameters": {
								"variable": "DownKey",
								"value": "false"
							}
						}
					],
					"sid": 220249363859343
				},
				{
					"eventType": "comment",
					"text": "If there's any input, move the player based on said input."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "evaluate-expression",
							"objectClass": "System",
							"sid": 770676966766409,
							"parameters": {
								"value": "RightKey - LeftKey <> 0 | DownKey - UpKey <> 0"
							}
						}
					],
					"actions": [
						{
							"callFunction": "MovePlayer",
							"sid": 205280530858334,
							"parameters": [
								"1",
								"angle(0, 0, RightKey - LeftKey, DownKey - UpKey) + 90"
							]
						}
					],
					"sid": 725933873966617
				},
				{
					"eventType": "comment",
					"text": "Move the player at an angle."
				},
				{
					"functionName": "MovePlayer",
					"functionDescription": "",
					"functionCategory": "",
					"functionReturnType": "none",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [
						{
							"name": "Speed",
							"type": "number",
							"initialValue": "0",
							"comment": "",
							"sid": 562468657225363
						},
						{
							"name": "AngleOffset",
							"type": "number",
							"initialValue": "0",
							"comment": "",
							"sid": 568143187470053
						}
					],
					"eventType": "function-block",
					"conditions": [],
					"actions": [],
					"sid": 954618296781780,
					"children": [
						{
							"eventType": "comment",
							"text": "Move the player along the X axis."
						},
						{
							"eventType": "block",
							"conditions": [],
							"actions": [
								{
									"id": "set-x",
									"objectClass": "PlayerCollision",
									"sid": 603568171096827,
									"parameters": {
										"x": "Self.X + cos(PlayerLookingAngle + AngleOffset) * Speed * 60 * dt"
									}
								}
							],
							"sid": 988080187547116,
							"children": [
								{
									"eventType": "comment",
									"text": "If the player is overlapping a solid object, move it in the opposite direction."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "is-overlapping-another-object",
											"objectClass": "PlayerCollision",
											"sid": 875019388237040,
											"parameters": {
												"object": "Wall"
											}
										}
									],
									"actions": [],
									"sid": 392556511757357,
									"children": [
										{
											"eventType": "block",
											"conditions": [
												{
													"id": "while",
													"objectClass": "System",
													"sid": 522184851373627
												},
												{
													"id": "is-overlapping-another-object",
													"objectClass": "PlayerCollision",
													"sid": 477247758826924,
													"parameters": {
														"object": "Wall"
													}
												}
											],
											"actions": [
												{
													"id": "set-x",
													"objectClass": "PlayerCollision",
													"sid": 322524685798509,
													"parameters": {
														"x": "Self.X + cos(PlayerLookingAngle + AngleOffset + 180) * 0.1"
													}
												}
											],
											"sid": 368201264441114
										}
									]
								}
							]
						},
						{
							"eventType": "comment",
							"text": "Move the player along the Y axis."
						},
						{
							"eventType": "block",
							"conditions": [],
							"actions": [
								{
									"id": "set-y",
									"objectClass": "PlayerCollision",
									"sid": 137397479359449,
									"parameters": {
										"y": "Self.Y + sin(PlayerLookingAngle + AngleOffset) * Speed * 60 * dt"
									}
								}
							],
							"sid": 609399147683209,
							"children": [
								{
									"eventType": "comment",
									"text": "If the player is overlapping a solid object, move it in the opposite direction."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "is-overlapping-another-object",
											"objectClass": "PlayerCollision",
											"sid": 986868770593141,
											"parameters": {
												"object": "Wall"
											}
										}
									],
									"actions": [],
									"sid": 808056689005304,
									"children": [
										{
											"eventType": "block",
											"conditions": [
												{
													"id": "while",
													"objectClass": "System",
													"sid": 343248824805551
												},
												{
													"id": "is-overlapping-another-object",
													"objectClass": "PlayerCollision",
													"sid": 554101101808395,
													"parameters": {
														"object": "Wall"
													}
												}
											],
											"actions": [
												{
													"id": "set-y",
													"objectClass": "PlayerCollision",
													"sid": 811640166028007,
													"parameters": {
														"y": "Self.Y + sin(PlayerLookingAngle + AngleOffset + 180) * 0.1"
													}
												}
											],
											"sid": 976082169664899
										}
									]
								}
							]
						}
					]
				}
			],
			"sid": 993730658315715
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Walls Drawing",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "comment",
					"text": "Constantly update the walls around the player."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "every-tick",
							"objectClass": "System",
							"sid": 697908795455609
						}
					],
					"actions": [
						{
							"type": "comment",
							"text": "Clear the canvas."
						},
						{
							"id": "clear-canvas",
							"objectClass": "DrawingCanvas",
							"sid": 120563054843893,
							"parameters": {
								"color": "rgbEx255(COLORONERED, COLORONEGREEN, COLORONEBLUE)"
							}
						},
						{
							"type": "comment",
							"text": "Draw the sky gradient."
						},
						{
							"id": "fill-linear-gradient",
							"objectClass": "DrawingCanvas",
							"sid": 357609168628893,
							"parameters": {
								"left": "0",
								"top": "0",
								"right": "320",
								"bottom": "78",
								"color1": "rgbEx255(COLORTWORED, COLORTWOGREEN, COLORTWOBLUE)",
								"color2": "   rgbEx255(COLORTHREERED, COLORTHREEGREEN, COLORTHREEBLUE)",
								"direction": "vertical"
							}
						},
						{
							"type": "comment",
							"text": "Draw the ground gradient."
						},
						{
							"id": "fill-linear-gradient",
							"objectClass": "DrawingCanvas",
							"sid": 780751667261095,
							"parameters": {
								"left": "0",
								"top": "180 - 78",
								"right": "320",
								"bottom": "180",
								"color1": "rgbEx255(COLORONERED, COLORONEGREEN, COLORONEBLUE)",
								"color2": "rgbEx255(COLORFOURRED, COLORFOURGREEN, COLORFOURBLUE)",
								"direction": "vertical"
							}
						}
					],
					"sid": 825604165174955,
					"children": [
						{
							"eventType": "comment",
							"text": "A normalized value that represents how much of the screen was drawn."
						},
						{
							"eventType": "variable",
							"name": "NormalizedScreenProgress",
							"type": "number",
							"initialValue": "0",
							"comment": "",
							"isStatic": false,
							"isConstant": false,
							"sid": 484057685968126
						},
						{
							"eventType": "comment",
							"text": "An angle offset used to make sure each is casted gradually from left to right."
						},
						{
							"eventType": "variable",
							"name": "RayAngleOffset",
							"type": "number",
							"initialValue": "0",
							"comment": "",
							"isStatic": false,
							"isConstant": false,
							"sid": 631302607711489
						},
						{
							"eventType": "comment",
							"text": "The distance at which a ray hit a wall."
						},
						{
							"eventType": "variable",
							"name": "RayHitDistance",
							"type": "number",
							"initialValue": "0",
							"comment": "",
							"isStatic": false,
							"isConstant": false,
							"sid": 746492552946450
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "repeat",
									"objectClass": "System",
									"sid": 966727122912197,
									"parameters": {
										"count": "SCREENRESOLUTION"
									}
								}
							],
							"actions": [
								{
									"type": "comment",
									"text": "Increase the normalized screen progress value."
								},
								{
									"id": "set-eventvar-value",
									"objectClass": "System",
									"sid": 116324332261914,
									"parameters": {
										"variable": "NormalizedScreenProgress",
										"value": "unlerp(0, SCREENRESOLUTION - 1, loopindex)"
									}
								},
								{
									"type": "comment",
									"text": "Update the ray angle offset."
								},
								{
									"id": "set-eventvar-value",
									"objectClass": "System",
									"sid": 729656630481764,
									"parameters": {
										"variable": "RayAngleOffset",
										"value": "- FOV / 2 + lerp(0, FOV, NormalizedScreenProgress)"
									}
								},
								{
									"type": "comment",
									"text": "Cast a ray forward."
								},
								{
									"id": "cast-ray",
									"objectClass": "PlayerCollision",
									"sid": 710265728459464,
									"behaviorType": "LineOfSight",
									"parameters": {
										"from-x": "Self.X",
										"from-y": "Self.Y",
										"to-x": "Self.X + cos(PlayerLookingAngle + RayAngleOffset) * 4096",
										"to-y": "Self.Y + sin(PlayerLookingAngle + RayAngleOffset) * 4096",
										"use-collision-cells": true
									}
								}
							],
							"sid": 804494223821942,
							"children": [
								{
									"eventType": "comment",
									"text": "Cast a ray and check for an intersection with any wall."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "ray-intersected",
											"objectClass": "PlayerCollision",
											"sid": 919821217534814,
											"behaviorType": "LineOfSight"
										}
									],
									"actions": [
										{
											"id": "set-eventvar-value",
											"objectClass": "System",
											"sid": 690791013854921,
											"parameters": {
												"variable": "RayHitDistance",
												"value": "PlayerCollision.LineOfSight.HitDistance"
											}
										}
									],
									"sid": 294220031871885
								},
								{
									"eventType": "comment",
									"text": "If a ray does not intersect, set its hit distance to an arbitrarily high value."
								},
								{
									"eventType": "block",
									"conditions": [
										{
											"id": "else",
											"objectClass": "System",
											"sid": 437942368810571
										},
										{
											"id": "ray-intersected",
											"objectClass": "PlayerCollision",
											"sid": 935703381337320,
											"behaviorType": "LineOfSight",
											"isInverted": true
										}
									],
									"actions": [
										{
											"id": "set-eventvar-value",
											"objectClass": "System",
											"sid": 773012941118252,
											"parameters": {
												"variable": "RayHitDistance",
												"value": "4096"
											}
										}
									],
									"sid": 117276949425546
								},
								{
									"eventType": "comment",
									"text": "A corrected version of the ray distance that partially mitigates the fisheye effect."
								},
								{
									"eventType": "variable",
									"name": "CorrectedRayDistance",
									"type": "number",
									"initialValue": "0",
									"comment": "",
									"isStatic": false,
									"isConstant": false,
									"sid": 366016373172768
								},
								{
									"eventType": "comment",
									"text": "A normalized value that's used to adjust the balance of all color gradients."
								},
								{
									"eventType": "variable",
									"name": "NormalizedColorReference",
									"type": "number",
									"initialValue": "0",
									"comment": "",
									"isStatic": false,
									"isConstant": false,
									"sid": 709565005321502
								},
								{
									"eventType": "comment",
									"text": "Draw walls."
								},
								{
									"eventType": "block",
									"conditions": [],
									"actions": [
										{
											"type": "comment",
											"text": "Compute a corrected version of the ray distance to partially mitigate the fisheye effect."
										},
										{
											"id": "set-eventvar-value",
											"objectClass": "System",
											"sid": 100807709166368,
											"parameters": {
												"variable": "CorrectedRayDistance",
												"value": "RayHitDistance * Functions.RadianCosine(Functions.RadianConvert(RayAngleOffset) - Functions.PlayerAngleRadian) + 0.0001"
											}
										},
										{
											"type": "comment",
											"text": "Draw the line corresponding to the ray hit."
										},
										{
											"id": "set-eventvar-value",
											"objectClass": "System",
											"sid": 756818786291409,
											"parameters": {
												"variable": "NormalizedColorReference",
												"value": "unlerp(0, 255, clamp(256 - RayHitDistance, 0, 255))"
											}
										},
										{
											"type": "comment",
											"text": "Draw the bottom wall outline."
										},
										{
											"id": "line",
											"objectClass": "DrawingCanvas",
											"sid": 815226230107494,
											"parameters": {
												"x1": "loopindex",
												"y1": "OriginalViewportHeight / 2 - 3000 / CorrectedRayDistance + 1",
												"x2": "loopindex",
												"y2": "OriginalViewportHeight / 2 + 3000 / CorrectedRayDistance",
												"color": "rgbEx255(lerp(COLORONERED, COLORFOURRED, NormalizedColorReference), lerp(COLORONEGREEN, COLORFOURGREEN, NormalizedColorReference), lerp(COLORONEBLUE, COLORFOURBLUE, NormalizedColorReference))",
												"line-thickness": "1",
												"line-cap": "butt"
											}
										},
										{
											"type": "comment",
											"text": "Draw the top wall outline."
										},
										{
											"id": "line",
											"objectClass": "DrawingCanvas",
											"sid": 789463612726522,
											"parameters": {
												"x1": "loopindex",
												"y1": "OriginalViewportHeight / 2 - 3000 / CorrectedRayDistance",
												"x2": "loopindex",
												"y2": "OriginalViewportHeight / 2 + 3000 / CorrectedRayDistance - 1",
												"color": "rgbEx255(lerp(COLORONERED, COLORTHREERED, NormalizedColorReference), lerp(COLORONEGREEN, COLORTHREEGREEN, NormalizedColorReference), lerp(COLORONEBLUE, COLORTHREEBLUE, NormalizedColorReference))",
												"line-thickness": "1",
												"line-cap": "butt"
											}
										},
										{
											"type": "comment",
											"text": "Draw the wall."
										},
										{
											"id": "line",
											"objectClass": "DrawingCanvas",
											"sid": 120199905104522,
											"parameters": {
												"x1": "loopindex",
												"y1": "OriginalViewportHeight / 2 - 3000 / CorrectedRayDistance + 1",
												"x2": "loopindex",
												"y2": "OriginalViewportHeight / 2 + 3000 / CorrectedRayDistance - 1",
												"color": "rgbEx255(lerp(COLORONERED, COLORTWORED, NormalizedColorReference), lerp(COLORONEGREEN, COLORTWOGREEN, NormalizedColorReference), lerp(COLORONEBLUE, COLORTWOBLUE, NormalizedColorReference))",
												"line-thickness": "1",
												"line-cap": "butt"
											}
										}
									],
									"sid": 523286862400772
								}
							]
						}
					]
				}
			],
			"sid": 524982145071586
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Map",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "comment",
					"text": "Toggle the map overlay visibility."
				},
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "on-key-pressed",
							"objectClass": "Keyboard",
							"sid": 210941687947144,
							"parameters": {
								"key": 77
							}
						}
					],
					"actions": [],
					"sid": 872986327712209,
					"children": [
						{
							"eventType": "comment",
							"text": "If the map is visible, make it invisible."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "layer-is-visible",
									"objectClass": "System",
									"sid": 551265016813919,
									"parameters": {
										"layer": "\"Map\""
									}
								}
							],
							"actions": [
								{
									"id": "set-layer-visible",
									"objectClass": "System",
									"sid": 327074876005040,
									"parameters": {
										"layer": "\"Map\"",
										"visibility": "invisible"
									}
								}
							],
							"sid": 218054661698925
						},
						{
							"eventType": "comment",
							"text": "However, if the map is invisible, make it visible."
						},
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "else",
									"objectClass": "System",
									"sid": 308855419655917
								},
								{
									"id": "layer-is-visible",
									"objectClass": "System",
									"sid": 556419172655242,
									"parameters": {
										"layer": "\"Map\""
									},
									"isInverted": true
								}
							],
							"actions": [
								{
									"id": "set-layer-visible",
									"objectClass": "System",
									"sid": 329599337525407,
									"parameters": {
										"layer": "\"Map\"",
										"visibility": "visible"
									}
								}
							],
							"sid": 999448291575439
						}
					]
				}
			],
			"sid": 978769140372745
		},
		{
			"eventType": "group",
			"disabled": false,
			"title": "Radian Toolkit",
			"description": "",
			"isActiveOnStart": true,
			"children": [
				{
					"eventType": "comment",
					"text": "To ensure consistent angle values without wrapping, it's best to utilize radians. Given that Construct Events don't support radians, this group features radian implementations of existing functions."
				},
				{
					"eventType": "comment",
					"text": "Convert degrees to radians."
				},
				{
					"functionName": "RadianConvert",
					"functionDescription": "",
					"functionCategory": "",
					"functionReturnType": "number",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [
						{
							"name": "X",
							"type": "number",
							"initialValue": "0",
							"comment": "",
							"sid": 461068223246804
						}
					],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"id": "set-function-return-value",
							"objectClass": "Functions",
							"sid": 795999129474894,
							"parameters": {
								"value": "X * 0.0174533"
							}
						}
					],
					"sid": 708063123195425
				},
				{
					"eventType": "comment",
					"text": "Returns radian cosine of x."
				},
				{
					"functionName": "RadianCosine",
					"functionDescription": "",
					"functionCategory": "",
					"functionReturnType": "number",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [
						{
							"name": "X",
							"type": "number",
							"initialValue": "0",
							"comment": "",
							"sid": 474449724879443
						}
					],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"type": "script",
							"script": "runtime.setReturnValue(Math.cos(localVars.X));"
						}
					],
					"sid": 107735594421146
				},
				{
					"eventType": "comment",
					"text": "Returns radian player angle."
				},
				{
					"functionName": "PlayerAngleRadian",
					"functionDescription": "",
					"functionCategory": "",
					"functionReturnType": "number",
					"functionCopyPicked": false,
					"functionIsAsync": false,
					"functionParameters": [],
					"eventType": "function-block",
					"conditions": [],
					"actions": [
						{
							"type": "script",
							"script": "runtime.setReturnValue(runtime.objects.PlayerCollision.getFirstInstance().angle);"
						}
					],
					"sid": 965577685541275
				}
			],
			"sid": 603370197785726
		}
	],
	"sid": 785478179662357
}